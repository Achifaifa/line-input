pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
-- Line!! input!!!
-- second line

function debug(text)
  printh(text,"lineinput_debug")
end

function _init()

  --Clear debug file
  printh("init","lineinput_debug",true)

  --Game state.
  --0: Splash screen
  --1: title screen
  --2: Normal game
  --3: Game over screen
  state=0
  --BGM selection (default at 1)
  bgm=1
  --no screen shake
  offset=0
  --beat data, one array of notes for each song (selectable with bgm variable)
  --should probably figure out a better way
  beatdata={{1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0},
            {1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0},
            {1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0}}
  bgmlocation={0,16,32}--pattern location of songs

  --Piece list
  pieces={}
  pieces[1]={{15,15},{15,15}} --square
  pieces[2]={{14},{14},{14},{14}} --line
  pieces[3]={{13,13,0},{0,13,13}} --z1
  pieces[4]={{0,12,12},{12,12,0}} --z2
  pieces[5]={{0,11},{0,11},{11,11}} --l1
  pieces[6]={{10,0},{10,0},{10,10}} --l2

  --colour palette for missed note indicator
  missedcolours={15,11,9,8,5}
  combocolours={6,10,9,8,7,11,12}
  flashcolours={7,10}

  --play intro bleep
  music(62)
  
end

function initgame()

  --create block area
  grid={}
  for i=1,25 do --Block field height
    grid[i]={}
    for j=1,10 do --Block field width
      grid[i][j]=0 
    end
  end

  nextpiece=rnd(pieces)
  currentpiece={{0,4},rnd(pieces)}
  speed=8 --Once in how many notes the piece goes down
  lastmbeat=-1 --Last beat in which a piece moved
  lastcbeat=-1 --Last beat in which a combo happened
  combomark=0 --changed to 1 if there was a combo beat in a loop
  missednotes=4 --missed notes while in combo. breaks if 4
  lastseek=-1
  score=0 --total points
  lines=0 --lines cleared
  combo=0 --current combo counter
  clearedpos={} --list of lines cleared for fx
  clearing=0 --timer for line clear fx

  --populate array of notes
  notes=beatdata[bgm]
  --extend array of notes to prevent continuity breaks
  --(Only for visuals, notes still 1 to 32)
  ln=#notes
  for i=1,#beatdata[bgm] do
    notes[ln+i]=beatdata[bgm][i]
  end

  --play music
  music(bgmlocation[bgm]) --this one starts on zero because why not
end

function draw_block_area()

  --area border
  rect(36,18,78,121)--x+6 y+6

  --main grid
  for i=1,#grid do 
    for j=1,#grid[i] do
      rectfill(33+(j*4),15+(i*4) ,37+(j*4),20+(i*4) ,grid[i][j])
    end
  end 

  --current piece
  cpiecexpos=currentpiece[1][2]
  cpieceypos=currentpiece[1][1]
  for i=1,#currentpiece[2] do 
    for j=1,#currentpiece[2][i] do
      if(currentpiece[2][i][j]!=0) do
        txp=(cpiecexpos+j)*4
        typ=(cpieceypos+i)*4
        rectfill(33+txp,16+typ ,37+txp-1,20+typ ,currentpiece[2][i][j])
      end
    end
  end

  --reset colour
  color()
end

function draw_note_area()

  --beats
  for i=1,#notes do
    if(notes[i]==1) do
      circfill(78, 40+8*(i-1-stat(20)) ,2.5,9)
    end
    if(notes[i]==2) do
      circfill(78, 40+8*(i-1-stat(20)) ,3.5,8)
      --print("\131", 80, 38+8*(i-1-stat(20)), 15)
    end
  end

  --reset colour
  color()
end

function draw_score_area()

  --next piece
  rectfill(9,17 ,35,46 ,0)
  color()
  print("next", 16,15)
  line(11,17 ,9,17)
  line(9,46)
  line(30,46)
  for i=1,#nextpiece do 
    for j=1,#nextpiece[i] do
      rectfill(15+(j*4),20+(i*4) ,19+(j*4),24+(i*4) ,nextpiece[i][j])
    end
  end
  color()

  --score
  print("score", 37,4)
  print(score, 65,4)

  --beat line
  line(79,40,100,40,missedcolours[missednotes+1])

  --combo display
  --combo=100--testing
  local avcol={}
  if(combo>0)do
    for i=1,ceil(combo/20) do 
      if(i<=#combocolours) do avcol[i]=combocolours[i] end
    end
    print("combo",81+rnd(combo/10),15+rnd(combo/10) ,rnd(avcol))
    print(combo, 100,30 ,rnd(avcol))  
  end
  color()
end

function drawsplash()
  local nt=stat(20)*8
  if(nt>64 or stat(24)==63) then nt=64 end
  spr(4 ,56,nt-8)
  spr(5 ,64,nt-8)
  spr(20 ,56,nt)
  spr(21 ,64,nt)
  if(stat(20)>15 or stat(24)==63) then print("test", 56,75) end
  if(stat(24)==-1)do
    music(48) --menu music
    state+=1 
  end
end


function drawmenu()
  --audio line sprites
  for i=0,6+bgm do
    spr(1, i*8,60)
  end
  spr(0, 56+(8*bgm),60)
  spr(2, 56+(8*bgm),52)
  spr(3, 64,52)
  spr(3, 72,52)
  spr(3, 80,52)

  --title card sprites
  spr(16, 40,35)
  spr(17, 48,35)
  spr(18, 56,35)
  spr(19, 64,35)

  --bgm selection
  print ("\139 bgm \145", 22, 52)
end

function sake()
  local dampen=0.8
  local dx=6-rnd(12)*offset
  local dy=6-rnd(12)*offset

  camera(dx,dy)

  offset=offset-dampen
  if(offset<0) then 
    offset=0 
    camera(0,0)
  end
end

function background()
  for i=0,16 do 
    for j=0,16 do 
      spr(6,i*8,j*8)
    end 
  end 
end

function clearfx()

  if(clearing>0)do
    for i=1,#clearedpos do
      local lh=20+((#grid-clearedpos[i])*4)
      rectfill(37,lh ,77,lh+4 ,flashcolours[(clearing%2)+1])
      for j=1,10 do
        circfill(35+flr(rnd(44)),lh-2+flr(rnd(8)) ,rnd(3), rnd({5,6,6,7}))
      end 
      color()
    end
    clearing=clearing-1
  end
  if(clearing==0) then
    clearedpos={}
  end
end

function _draw()

  --shake things if needed
  sake()

  cls()
  --splash screen
  if (state==0) then
    drawsplash()
  end
  --main menu
  if (state==1) then
    drawmenu()
  end
  --game loop
  if (state==2) then
    --background
    --background()
    rectfill(79,18, 100,121, 0)
    --content
    draw_note_area()
    draw_block_area()
    draw_score_area()
    --run fx for line clears
    clearfx()
  end
end

--returns the nearest valid beat (if any)
--to-do doesn't work well
function keypress_timing()

  note=stat(20)+1
  cbeat=notes[note]
  if(cbeat!=0) then return cbeat end
  if(note==1)do
    pbeat=notes[32]
    nbeat=notes[1]
  elseif(note==32)then
    pbeat=notes[31]
    nbeat=notes[1]
  else
    nbeat=notes[note+1]
    pbeat=notes[note-1]
  end
  if(pbeat!=0)then return pbeat end
  if(nbeat!=0)then return nbeat end

  return 0
end

--rotates current piece
--0 ccw, 1 cw
function rotator(cw)

  --this fucking sucks. copy data to restore later if needed
  local coordbackup={currentpiece[1][1],currentpiece[1][2]}
  local piecebackup={}
  for i=1,#currentpiece[2] do
    piecebackup[i]={}
    for j=1,#currentpiece[2][1] do 
      piecebackup[i][j]=currentpiece[2][i][j]
    end
  end

  --piece rotation
  local oldpiece=currentpiece[2]
  local newpiece={}
  for i=1,#oldpiece[1] do
    newpiece[i]={}
    for j=1,#oldpiece do 
      newpiece[i][j]=oldpiece[j][i]
    end 
  end
  nnp={}
  for i=1,#newpiece do
    nnp[#newpiece-i+1]=newpiece[i]
  end
  currentpiece[2]=nnp

  --Correct stick coordinates
  if (currentpiece[1][1]==14) do
    if(#nnp==1)do 
      currentpiece[1][1]=currentpiece[1][1]+1 
      currentpiece[1][2]=currentpiece[1][2]-1 
    else 
      currentpiece[1][1]=currentpiece[1][1]-1 
      currentpiece[1][2]=currentpiece[1][2]+1 
    end 
  end

  --Adjust if out of bounds
  if(currentpiece[1][2]<0) then currentpiece[1][2]=0 end 
  if(currentpiece[1][2]+#currentpiece[2][1]>10) then currentpiece[1][2]=10-#currentpiece[2][1] end

  --If there are pieces in the way, revert back
  if(collisionator()==-1)do
    currentpiece={coordbackup, piecebackup}
  end

  --If CW rotation is needed, repeat two more times
  if(cw==1)do 
    rotator()
    rotator()
  end
end

--increases combo if the beat is of the type specified, resets it otherwise
function comboer(cbtype)
  
  --timing data
  tmdata=keypress_timing()
  --to-do can't make this bullshit process several presses in the same note as invalid combos
  if(tmdata==cbtype) do 
    combo=combo+1
    missednotes=-1
    if(missednotes<0)then missednotes=0 end
    combomark=1
    lastcbeat=stat(20)
    score=score+ceil(combo/10)
    return
  else 
    combo=0
    combomark=0
    lastcbeat=-1
    missednotes=4
  end
end

--checks if the past note has been pressed
function notechecker()

  --skip if there's no combo going
  if(combo==0)then return end

  --seek previous note
  local seeknote=stat(20)
  while(notes[seeknote]==0)do
    if(seeknote==0)do
      seeknote=32
    else
      seeknote=seeknote-1
    end
  end

  if(seeknote==lastseek)then return end

  --if that note wasn't hit, increase missed note counter
  if(abs(seeknote-lastcbeat)>1)do
    missednotes+=1
    lastseek=seeknote
    if(missednotes==4)do 
      lastcbeat=-1
      combo=0
      combomark=0
    end 
  end 
end

--0 if everything is ok, 1 if the piece is on bottom or over something, -1 if game over
--lat for lateral detection, -1 left, 1 right
function collisionator(lat)

  if(lat==nil)do lat=0 end --yikes

  --default result
  res=0

  --detect surroundings
  local piece=currentpiece[2]
  local xc=currentpiece[1][2]
  local yc=currentpiece[1][1]
  for i=1,#piece do
    for j=1,#piece[1] do 
      if(piece[i][j]!=0 and yc+#piece<25 and xc>1 and xc<10)do 
        --check if it collides with background
        if (grid[yc+i][xc+j]!=0) then return -1 end 
        --check if there are things below
        if (grid[yc+i+1][xc+j]!=0 and lat==0) do
          res=1 
        end 
        --right 
        if (grid[yc+i][xc+j+1]!=0 and lat==1) do
          res=1 
        end 
        --left
        if (grid[yc+i][xc+j-1]!=0 and lat==-1) do
          res=1 
        end 
      end 
    end 
  end

  --piece at bottom
  if(currentpiece[1][1]+#currentpiece[2]>24 and lat==0) then return 1 end

  return res
end

function fuse()

  local collisions=collisionator()
  if(collisions==1)do 
    --fuse piece on grid
    local piece=currentpiece[2]
    for i=1,#piece do 
      for j=1, #piece[1] do 
        if(piece[i][j]!=0)do
          grid[currentpiece[1][1]+i][currentpiece[1][2]+j]=piece[i][j]
        end
      end 
    end 

    --process lines
    local newgrid={}
    local flines=0
    for i=1,#grid do 
      local full=1
      for j=1,#grid[1] do 
        if(grid[#grid-i+1][j]==0) then full=0 end
      end
      if(full==1)do 
        clearedpos[#clearedpos+1]=i
        flines=flines+1
      else 
        newgrid[#grid-i+1+flines]=grid[#grid-i+1]
      end 
    end
    for i=1,flines do 
      newgrid[i]={}
      for j=1,10 do --Block field width
        newgrid[i][j]=0 
      end
    end 
    grid=newgrid

    --process line score
    if(flines>0)do

      --shake screen 
      offset=3*flines
      --run clear fx
      clearing=5
      --play sound
      sfx(55,1,8,4)

      local mscore=0
      if(flines==1)do
        mscore=mscore+50
      elseif(flines==2)then
        mscore=mscore+100
      elseif(fline==3)then
        mscore=mscore+200
      else
        mscore=mscore+500
      end
      if(combomark==1) then mscore=mscore+mscore*flr(combo/10) end
      score=score+mscore
      lines=lines+flines
    end

    --generate new piece
    currentpiece={{0,4},nextpiece}
    nextpiece=rnd(pieces)

    --check if new piece collides
    if(collisionator()==-1) then  end --to-do game over
  end
end

function _update()

  --game logic
  if(state==2)then

    --move piece down per timing
    if (stat(20)%speed==0) then
      if (lastmbeat!=stat(20)) then
        fuse()
        currentpiece[1][1]=currentpiece[1][1]+1 
        lastmbeat=stat(20)
      end
    end
    
    --controls (LRUD OX -> 0..6)
    if(btnp(0))do --left
      if(currentpiece[1][2]-1>=0 and collisionator(-1)==0)do
        currentpiece[1][2]=currentpiece[1][2]-1
        comboer(1)
      end
    end
    if(btnp(1))do --right
      if(currentpiece[1][2]+1+#currentpiece[2][1]<11 and collisionator(1)==0)do
        currentpiece[1][2]=currentpiece[1][2]+1
        comboer(1)
      end
    end
    if(btnp(2))do --up (fast drop) 
      sfx(55,1,4,1)
      while(collisionator()!=1)do 
        currentpiece[1][1]=currentpiece[1][1]+1
      end
      fuse()
      comboer(2)
    end
    if(btnp(3))do --down
      fuse()
      currentpiece[1][1]=currentpiece[1][1]+1
      comboer(1)
    end
    if(btnp(4))do --O (Rotate left)
      rotator(0)
      comboer(1)
    end
    if(btnp(5))do --X (Rotate right)
      rotator(1)
      comboer(1)
    end
    combomark=0

    --check for missed notes
    if (stat(20)%4) then notechecker() end

  end

  --title to game
  if(state==1)then
    if(btnp(0))do --left
      bgm=((bgm+1)%3)+1
      sfx(55,-1,0,2)
    end
    if(btnp(1))do --right
      debug("bla")
      bgm=((bgm+3)%3)+1
      sfx(55,-1,0,2)
    end
    if(btnp(4))do
      state=state+1
      initgame()
    end
  end

  --splash to title
  if(state==0)then
    if(btnp(4)) then 
      state=state+1
      music(-1)
    end
  end

end


__gfx__
00056000000000000000000000022000eeeeeeeeeeeeeeee50000000000000000000000000000000000000000000000000000000000000000000000000000000
000650000000000000000000000ee000e56565656505050e05000000000000000000000000000000000000000000000000000000000000000000000000000000
00066000000000000005500000eeee00e65656565050500e00500000000000000000000000000000000000000000000000000000000000000000000000000000
65666000656665660005500000eeee00e56565650505000e00050000000000000000000000000000000000000000000000000000000000000000000000000000
56660000566656660022220000000000e65656505050000e00005000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000eeee0000000000e56565050500000e00000500000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000eeee0000000000e65650505000000e00000050000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000eeee0000000000e56505050000000e00000005000000000000000000000000000000000000000000000000000000000000000000000000
77070700707770770777777777777777e65050500000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000
77070770707000770777777777777777e50505000000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000
77070707707770770000000000000077e05050000000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000
77070700707000770700707700707077e50500000000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000
77070700707770770770707070707077e05000000000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000
77000000000000770707707700707077e50000000000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777770770700707000707077e00000000000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777770770700707000070077eeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
010a00002815523155211552315528155231552115523155281552315521155231552815523155211552315528155231552115523155281552315521155231552815523155211552315528155231552115523155
010a000026155211551f1552115526155211551f1552115526155211551f1552115526155211551f1552115524155211551f1551d1552315528155291552d15524155211551f1551d1552315528155291552d155
000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010a00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000a00000005400051000522700004050040000405010000000540005100052000000405000000040500000000054000510005227000040502800004050240000005400051000522700004050280000405024000
010a000004050040500405027000070502800007050240000405004050040500000007050000000705000000070500705007050270000c050280000c050240000c0500c0500c050270000e050280000e05024000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01140000183541335518356133001830013355183551a355183551335518356133001830013355183551a3551b355163551b356163001b300163551b3551d3551d355183551d356183001d356183551d3551f355
01140000183541335518356133001835613355183551a355183551335518356133001835613355183551a3551b355163551b356163001b356163551b3551d3551d355183551d356183001d356183551d3551f351
011400001f3511f3411f3411f3311835118351183521835218352183521835218342183421834218342183311b3511b3521b3521b3411b3411b3421b3311b3311f3511f3521f3411f3311d3511d3521d3411d331
011300001f3511f3411f3411f33118351183511835218352183521835218352183421834218342183421833116351163521635216341163411634216331163311435114352143411433113351133521334113331
01140000000500c0000c0500c00000050000000c0500a050000500c0000c0500c00000050000000c0500e050000500000013050000000005000000130500e0500505000000110500000000050000001105013050
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01050000180501a05100000000001a6530000000000000000e6571d6473b6371f647376000d0000d0000d00019d001bd001bd001bd001bd000000000000000001bc001bc001bc0018c0000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011400000555300503055000050305553005030550000503055530050305500005030555300503055000050305553005030550000503055530050305500005030555300503055000050305553005030550000503
011300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010a00000c351133511a35121351283512f3513735132352323323231232300323003230232302273000030027352273522735227342273422734227332273322733227322273222732227312273122731227312
__music__
01 3079343c
00 3179343c
00 3279343c
02 3379343c
01 7c7d7e7f
02 7c7d7e7f
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 00434244
00 01424344
01 00440444
02 01450544
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
01 7079747c
00 7179747c
00 7279747c
02 7379747c
00 7a797e7f
00 7a797e7f
00 7a797e7f
02 7a797e7f
00 41424344
00 41424344
00 41424344
00 41424344
01 7c7d7e7f
02 7c7d7e7f
00 3f424344
04 3e424344

